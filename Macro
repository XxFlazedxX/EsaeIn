local player = game.Players.LocalPlayer
local runService = game:GetService("RunService")
local userInputService = game:GetService("UserInputService")

-- GUI
local gui = Instance.new("ScreenGui")
gui.Name = "FlazedMenu"
gui.ResetOnSpawn = false
gui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 250, 0, 150)
frame.Position = UDim2.new(0, 30, 0, 150)
frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
frame.Active = true
frame.Draggable = true
frame.BorderSizePixel = 0
frame.Parent = gui

-- Label
local label = Instance.new("TextLabel")
label.Size = UDim2.new(1, 0, 0, 20)
label.Position = UDim2.new(0, 0, 0, 0)
label.BackgroundTransparency = 1
label.Text = "˜”*°•.˜”*°• Made By Flazed •°*”˜.•°*”˜"
label.TextColor3 = Color3.fromRGB(255, 255, 255)
label.Font = Enum.Font.Gotham
label.TextSize = 12
label.Parent = frame

-- Pull/Throw Button
local pulling = false
local pulledOnce = false
local macroBtn = Instance.new("TextButton")
macroBtn.Position = UDim2.new(0.05, 0, 0, 30)
macroBtn.Text = "Throw: OFF"
macroBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
macroBtn.TextColor3 = Color3.new(1, 1, 1)
macroBtn.Font = Enum.Font.Gotham
macroBtn.BorderSizePixel = 0
macroBtn.Parent = frame

macroBtn.MouseButton1Click:Connect(function()
	pulling = not pulling
	pulledOnce = pulling or pulledOnce
	macroBtn.Text = pulling and "Pull: ON" or "Throw: OFF"
end)

-- Get rope
local function getRope()
	local ropesFolder = workspace:FindFirstChild("Ropes")
	if not ropesFolder then return nil end
	local userRope = ropesFolder:FindFirstChild(player.Name)
	if not userRope then return nil end
	return userRope:FindFirstChild("mainConnectionRope")
end

-- EaseIn
local isEaseInActive = false
local speed = 27

local easeInBtn = Instance.new("TextButton")
easeInBtn.Position = UDim2.new(0.05, 0, 0, 70)
easeInBtn.Text = "EaseIn: OFF"
easeInBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
easeInBtn.TextColor3 = Color3.new(1, 1, 1)
easeInBtn.Font = Enum.Font.Gotham
easeInBtn.BorderSizePixel = 0
easeInBtn.Parent = frame

easeInBtn.MouseButton1Click:Connect(function()
	isEaseInActive = not isEaseInActive
	easeInBtn.Text = isEaseInActive and "EaseIn: ON" or "EaseIn: OFF"
	local rope = getRope()
	if rope and isEaseInActive then
		rope.Length = 50
	end
end)

-- Kill Button
local killBtn = Instance.new("TextButton")
killBtn.Position = UDim2.new(0.2, 0, 0, 110)
killBtn.Text = "Kill: OFF"
killBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
killBtn.TextColor3 = Color3.new(1, 1, 1)
killBtn.Font = Enum.Font.Gotham
killBtn.BorderSizePixel = 0
killBtn.Parent = frame

local killing = false
killBtn.MouseButton1Click:Connect(function()
	killing = not killing
	killBtn.Text = killing and "Kill: ON" or "Kill: OFF"

	local dmg = workspace:FindFirstChild("Pit") and workspace.Pit:FindFirstChild("Damage")
	if dmg then
		dmg.Size = killing and Vector3.new(2e8, 2e8, 2e8) or Vector3.new(0, 0, 0)
	end

	for _, v in pairs(player.Character:GetDescendants()) do
		if v:IsA("BasePart") then
			v.CanTouch = not killing
			v.CanCollide = not killing
		end
	end
end)

-- Resize Handle
local resize = Instance.new("TextButton")
resize.Size = UDim2.new(0, 16, 0, 16)
resize.Position = UDim2.new(1, -4, 1, -4)
resize.AnchorPoint = Vector2.new(1, 1)
resize.BackgroundColor3 = Color3.fromRGB(120, 120, 120)
resize.Text = ""
resize.BorderSizePixel = 0
resize.Parent = frame

-- Resize Logic
local resizing = false
local startSize, startPos
resize.MouseButton1Down:Connect(function()
	resizing = true
	startSize = frame.AbsoluteSize
	startPos = Vector2.new(player:GetMouse().X, player:GetMouse().Y)
	frame.Draggable = false
end)

userInputService.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		resizing = false
		frame.Draggable = true
	end
end)

-- Base size reference
local baseSize = Vector2.new(250, 150)
local function updateScale()
	local scaleX = frame.AbsoluteSize.X / baseSize.X
	local scaleY = frame.AbsoluteSize.Y / baseSize.Y
	local scale = math.min(scaleX, scaleY)

	macroBtn.TextSize = 15 * scale
	easeInBtn.TextSize = 15 * scale
	killBtn.TextSize = 13 * scale
	label.TextSize = 12 * scale

	macroBtn.Size = UDim2.new(0.9, 0, 0, 30 * scale)
	easeInBtn.Size = UDim2.new(0.9, 0, 0, 30 * scale)
	killBtn.Size = UDim2.new(0.6, 0, 0, 25 * scale)
end

-- Main Loop
runService.RenderStepped:Connect(function(dt)
	local rope = getRope()
	if rope then
		if isEaseInActive then
			rope.Length = math.max(rope.Length - speed * dt, 5)
			if rope.Length <= 5 then
				isEaseInActive = false
				easeInBtn.Text = "EaseIn: OFF"
			end
		else
			if pulling then
				rope.Length = 5
			elseif pulledOnce then
				rope.Length = 1000000000000
			end
		end
	end

	if resizing then
		local delta = Vector2.new(player:GetMouse().X, player:GetMouse().Y) - startPos
		frame.Size = UDim2.new(0, math.max(50, startSize.X + delta.X), 0, math.max(50, startSize.Y + delta.Y))
		updateScale()
	end
end)

updateScale()

